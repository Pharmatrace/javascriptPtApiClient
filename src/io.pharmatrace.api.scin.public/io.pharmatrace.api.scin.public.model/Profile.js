/**
 * PharmaTrace Supply Chain Information Network API
 * The PharmaTrace SCIN API provides network members a resource and process oriented access to the blockchain backed market and inventory information. It represents a layer of abstraction above the Hyperledger network to facilitate a business focused development of clients and integration systems without the need to directly connect to Hyperledger nodes.
 *
 * OpenAPI spec version: 0.0.1
 * Contact: api@pharmatrace.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['io.pharmatrace.api.scin.public/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.PharmaTraceSupplyChainInformationNetworkApi) {
      root.PharmaTraceSupplyChainInformationNetworkApi = {};
    }
    root.PharmaTraceSupplyChainInformationNetworkApi.Profile = factory(root.PharmaTraceSupplyChainInformationNetworkApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The Profile model module.
   * @module io.pharmatrace.api.scin.public/io.pharmatrace.api.scin.public.model/Profile
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Profile</code>.
   * @alias module:io.pharmatrace.api.scin.public/io.pharmatrace.api.scin.public.model/Profile
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>Profile</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:io.pharmatrace.api.scin.public/io.pharmatrace.api.scin.public.model/Profile} obj Optional instance to populate.
   * @return {module:io.pharmatrace.api.scin.public/io.pharmatrace.api.scin.public.model/Profile} The populated <code>Profile</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('first_name')) {
        obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
      }
      if (data.hasOwnProperty('last_name')) {
        obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('twitter_name')) {
        obj['twitter_name'] = ApiClient.convertToType(data['twitter_name'], 'String');
      }
      if (data.hasOwnProperty('linkedin_name')) {
        obj['linkedin_name'] = ApiClient.convertToType(data['linkedin_name'], 'String');
      }
      if (data.hasOwnProperty('facebook_name')) {
        obj['facebook_name'] = ApiClient.convertToType(data['facebook_name'], 'String');
      }
      if (data.hasOwnProperty('picture')) {
        obj['picture'] = ApiClient.convertToType(data['picture'], 'String');
      }
      if (data.hasOwnProperty('stakeholder_id')) {
        obj['stakeholder_id'] = ApiClient.convertToType(data['stakeholder_id'], 'String');
      }
      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * First name of the PT network user.
   * @member {String} first_name
   */
  exports.prototype['first_name'] = undefined;
  /**
   * Last name of the PT network user.
   * @member {String} last_name
   */
  exports.prototype['last_name'] = undefined;
  /**
   * Email address
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * Twitter name
   * @member {String} twitter_name
   */
  exports.prototype['twitter_name'] = undefined;
  /**
   * LinkedIn name
   * @member {String} linkedin_name
   */
  exports.prototype['linkedin_name'] = undefined;
  /**
   * Facebook name
   * @member {String} facebook_name
   */
  exports.prototype['facebook_name'] = undefined;
  /**
   * Image URL
   * @member {String} picture
   */
  exports.prototype['picture'] = undefined;
  /**
   * the PT network member that the user/profile is assigned to.
   * @member {String} stakeholder_id
   */
  exports.prototype['stakeholder_id'] = undefined;
  /**
   * true if the user is currently active. Inactive users will be anonymized but not deleted to maintain integrity of transaction history
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;



  return exports;
}));


